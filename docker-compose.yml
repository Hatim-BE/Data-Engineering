version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: pgdb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - pgnet
    volumes:
      - "${POSTGRES_VOLUME}:/var/lib/postgresql/data"
    healthcheck:
          test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
          interval: 30s
          timeout: 10s
          retries: 10

  kestra:
    image: kestra/kestra:latest
    # pull_policy: always
    # Note that this setup with a root user is intended for development purpose.
    # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
    user: "root"
    command: server standalone
    networks:
      - pgnet
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
      - ./flows:/flows # mouting the /flows folder to docker
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/${POSTGRES_KETSRA_DB}
            driverClassName: org.postgresql.Driver
            username: ${POSTGRES_USER}
            password: ${POSTGRES_PASSWORD}
        kestra:
          # server:
          #   basicAuth:
          #     username: admin@kestra.io # it must be a valid email address
          #     password: Admin1234 # it must be at least 8 characters long with uppercase letter and a number
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
        micronaut:
          io:
            watch:
              enabled: true # enabling sync
              paths:
                - /flows 
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_started

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - pgnet
    depends_on:
      - postgres

# ingest_data:
#   build: .
#   container_name: ingest_taxi_data
#   networks:
#     - pgnet

networks:
  pgnet:
    name: pgnet
volumes:
  kestra-ny-taxi-volume:
  kestra-data:
